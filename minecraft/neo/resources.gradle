file('src/generated/resources').mkdirs()
project.sourceSets.main.resources { srcDir 'src/generated/resources' }

if (System.getenv("CI") && System.getenv("CI").toBoolean()) {
    project.tasks.configureEach { task ->
        if (task.name == 'runData') {
            task.doLast {
                delete 'src/generated/resources/.cache'
            }
        }
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        neo_version            : neo_version,
        neo_version_range      : neo_version_range,
        loader_version_range   : loader_version_range,
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_license            : mod_license,
        mod_version            : mod_version,
        mod_authors            : mod_authors,
        mod_credits            : mod_credits,
        mod_description        : mod_description,
        mod_repository         : mod_repository,
    ]
    if (project.hasProperty('resourceReplaceProperties')) {
        replaceProperties += project.ext.resourceReplaceProperties
    }
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}
